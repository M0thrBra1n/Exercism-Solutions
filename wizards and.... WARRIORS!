
abstract class Fighter {
    
    boolean spellPrepared = false;
    String firstString = "Fighter is a ";

    boolean isVulnerable() {
        return false;
    }

    abstract int damagePoints(Fighter fighter);
}

class Warrior extends Fighter {

    @Override
    public String toString() {
    return "Fighter is a " + getClass().toString().substring(6);
    }

    @Override
    int damagePoints(Fighter fighter) {
        if(fighter.isVulnerable()){
            return 10;
        }
        return 6;
    }
}

class Wizard extends Fighter {

    public String toString(){
        return "Fighter is a " + getClass().toString().substring(6);
        }

    @Override
    boolean isVulnerable() {
        if(!spellPrepared){
            return true;
        }
        return false;
    }

    @Override
    int damagePoints(Fighter fighter) {
        if(spellPrepared) {
            return 12;
        }
        return 3;
    }

    void prepareSpell() {
        spellPrepared = true;
    }
}
