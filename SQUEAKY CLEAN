public class SqueakyClean {
    
   
    public static char[] greekLowerCase = {
            '\u03B1', '\u03B2', '\u03B3', '\u03B4', '\u03B5',
            '\u03B6', '\u03B7', '\u03B8', '\u03B9', '\u03BA',
            '\u03BB', '\u03BC', '\u03BD', '\u03BE', '\u03BF',
            '\u03C0', '\u03C1', '\u03C3', '\u03C4', '\u03C5',
            '\u03C6', '\u03C7', '\u03C8', '\u03C9'};
    public static boolean isGreek = false;
    public static StringBuilder preSb = new StringBuilder();


    public static String clean(String description) {
        StringBuilder sb = new StringBuilder();

        if (description.contains("-")) {
            String[] twoParts = description.split("-");
            if (Character.isLetter(twoParts[1].charAt(0))) {
                description = twoParts[0] + twoParts[1].substring(0, 1).toUpperCase() +
                        twoParts[1].substring(1);
            } else if (!Character.isLetter(twoParts[1].charAt(0))) {
                description = twoParts[0] + twoParts[1].substring(1, 2).toUpperCase()
                        + twoParts[1].substring(2);
            }
        }
        StringBuilder sb2 = new StringBuilder();
        for (int i = 0; i < description.length(); i++) {
            char currentChar = description.charAt(i);
            boolean isGreek = false;
            for (int j = 0; j < greekLowerCase.length; j++) {
                if (currentChar == greekLowerCase[j]) {
                    isGreek = true;
                    break;
                }
                }
            if(!isGreek){
                sb2.append(description.charAt(i));
            }

        }
        description = sb2.toString();
        for (char letters : description.toCharArray()) {
            if (Character.isISOControl(letters)) {
                sb.append("CTRL");
            } else if (letters == ' ') {
                sb.append("_");
            } else if (!Character.isLetter(letters)) {
                sb.append("");
            }else{
                sb.append(letters);
            }
        }

        return sb.toString();
    }

    }
